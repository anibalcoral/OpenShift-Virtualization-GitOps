---
- name: Demo Utilities
  hosts: local
  gather_facts: false
  vars:
    argocd_namespace: "openshift-gitops"
    default_timeout: 300

  tasks:
    - name: Wait for application sync status
      kubernetes.core.k8s_info:
        api_version: argoproj.io/v1alpha1
        kind: Application
        name: "{{ app_name }}"
        namespace: "{{ argocd_namespace }}"
        wait: true
        wait_condition:
          type: "{{ sync_status | default('Synced') }}"
          status: "True"
        wait_timeout: "{{ timeout | default(default_timeout) }}"
      when: app_name is defined

    - name: Wait for application health status
      kubernetes.core.k8s_info:
        api_version: argoproj.io/v1alpha1
        kind: Application
        name: "{{ app_name }}"
        namespace: "{{ argocd_namespace }}"
        wait: true
        wait_condition:
          type: "{{ health_status | default('Healthy') }}"
          status: "True"
        wait_timeout: "{{ timeout | default(default_timeout) }}"
      when: app_name is defined

    - name: Wait for VM to exist
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        name: "{{ vm_name }}"
        namespace: "{{ vm_namespace }}"
        wait: true
        wait_condition:
          type: Ready
          status: "True"
        wait_timeout: "{{ timeout | default(default_timeout) }}"
      when: vm_name is defined and vm_namespace is defined

    - name: Wait for VM to be deleted
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        name: "{{ vm_name }}"
        namespace: "{{ vm_namespace }}"
        wait: true
        wait_condition:
          type: NotFound
        wait_timeout: "{{ timeout | default(default_timeout) }}"
      when: vm_name is defined and vm_namespace is defined

    - name: Trigger ArgoCD application sync
      kubernetes.core.k8s:
        state: patched
        api_version: argoproj.io/v1alpha1
        kind: Application
        name: "{{ app_name }}"
        namespace: "{{ argocd_namespace }}"
        definition:
          operation:
            sync:
              revision: "HEAD"
              prune: true
      when: app_name is defined

    - name: Get application status
      kubernetes.core.k8s_info:
        api_version: argoproj.io/v1alpha1
        kind: Application
        name: "{{ app_name }}"
        namespace: "{{ argocd_namespace }}"
      register: app_status
      when: app_name is defined

    - name: Display application status
      ansible.builtin.debug:
        msg: |
          Application '{{ app_name }}' status:
          Sync: {{ app_status.resources[0].status.sync.status | default('Unknown') }}
          Health: {{ app_status.resources[0].status.health.status | default('Unknown') }}
      when: app_name is defined and app_status.resources is defined

    - name: Get VM status
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        name: "{{ vm_name }}"
        namespace: "{{ vm_namespace }}"
      register: vm_status
      when: vm_name is defined and vm_namespace is defined

    - name: Display VM status
      ansible.builtin.debug:
        msg: |
          VM '{{ vm_name }}' status: {{ vm_status.resources[0].status.printableStatus | default('Unknown') if vm_status.resources else 'Not Found' }}
      when: vm_name is defined and vm_namespace is defined

    - name: Wait for VMI to be deleted
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachineInstance
        name: "{{ vm_name }}"
        namespace: "{{ vm_namespace }}"
        wait: true
        wait_condition:
          type: NotFound
        wait_timeout: "{{ timeout | default(default_timeout) }}"
      when: vm_name is defined and vm_namespace is defined
