---
- name: OpenShift GitOps Workshop - Complete Installation
  hosts: local
  gather_facts: true
  vars:
    apps_repo_path: "/home/lchiaret/git/OpenShift-Virtualization-GitOps-Apps"
    skip_domain_validation: false
    skip_ssh_setup: false

  tasks:
    - name: Display installation start
      ansible.builtin.debug:
        msg: |
          Starting OpenShift GitOps Workshop Installation
          ==============================================
          This playbook will:
          1. Validate and configure cluster domain
          2. Setup SSH keys for VMs
          3. Install GitOps operator and applications
          4. Validate installation

    - name: Check prerequisites
      ansible.builtin.fail:
        msg: "oc CLI not found. Please install OpenShift CLI."
      when: ansible_facts['env']['PATH'] is not search('oc')

    - name: Validate and configure cluster domain
      ansible.builtin.include_tasks: validate-cluster-domain.yaml
      when: not skip_domain_validation

    - name: Setup SSH keys for VMs
      ansible.builtin.include_tasks: setup-ssh-key.yaml
      when: not skip_ssh_setup

    - name: Install GitOps operator and applications
      ansible.builtin.include_tasks: install-gitops.yaml

    - name: Wait for applications to be ready
      kubernetes.core.k8s_info:
        api_version: argoproj.io/v1alpha1
        kind: Application
        name: "{{ item }}"
        namespace: openshift-gitops
        wait: true
        wait_condition:
          type: SyncCompleted
        wait_timeout: 600
      loop:
        - workshop-vms-dev
        - workshop-vms-hml
        - workshop-vms-prd
      ignore_errors: true

    - name: Get ArgoCD server route
      kubernetes.core.k8s_info:
        api_version: route.openshift.io/v1
        kind: Route
        name: openshift-gitops-server
        namespace: openshift-gitops
      register: argocd_route

    - name: Get ArgoCD admin password
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: openshift-gitops-cluster
        namespace: openshift-gitops
      register: argocd_secret

    - name: Get cluster domain
      kubernetes.core.k8s_info:
        api_version: config.openshift.io/v1
        kind: Ingress
        name: cluster
      register: cluster_ingress

    - name: Set final variables
      ansible.builtin.set_fact:
        argocd_url: "https://{{ argocd_route.resources[0].spec.host }}"
        argocd_password: "{{ argocd_secret.resources[0].data['admin.password'] | b64decode }}"
        cluster_domain: "{{ cluster_ingress.resources[0].spec.domain }}"

    - name: Display installation completion
      ansible.builtin.debug:
        msg: |
          Installation completed successfully!
          ===================================
          
          Workshop Information:
          ArgoCD URL: {{ argocd_url }}
          ArgoCD Username: admin
          ArgoCD Password: {{ argocd_password }}
          
          Workshop Applications:
          - workshop-vms-dev (Development VMs)
          - workshop-vms-hml (Homologation VMs)
          - workshop-vms-prd (Production VMs)
          
          Application URLs (after deployment):
          - Development: https://dev-workshop-vms.{{ cluster_domain }}
          - Homologation: https://hml-workshop-vms.{{ cluster_domain }}
          - Production: https://workshop-vms.{{ cluster_domain }}
          
          Next steps:
          1. Access ArgoCD UI using the credentials above
          2. Check workshop status: ansible-playbook -i inventory/localhost playbooks/check-workshop-status.yaml
          3. Run demo playbooks in playbooks/ directory