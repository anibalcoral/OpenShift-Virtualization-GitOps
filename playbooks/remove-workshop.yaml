---
- name: OpenShift GitOps Workshop - Complete Removal
  hosts: local
  gather_facts: false
  vars:
    workshop_namespace_base: "workshop-gitops-vms"
    argocd_namespace: "openshift-gitops"
    remove_operator: false

  tasks:
    - name: Display removal start
      ansible.builtin.debug:
        msg: |
          Starting OpenShift GitOps Workshop Removal
          ==========================================
          This will remove all workshop resources

    - name: Remove ArgoCD Applications
      kubernetes.core.k8s:
        state: absent
        api_version: argoproj.io/v1alpha1
        kind: Application
        name: "{{ item }}"
        namespace: "{{ argocd_namespace }}"
      loop:
        - workshop-gitops-vms-dev
        - workshop-gitops-vms-hml
        - workshop-gitops-vms-prd
      failed_when: false

    - name: Wait for applications to be deleted
      kubernetes.core.k8s_info:
        api_version: argoproj.io/v1alpha1
        kind: Application
        name: "{{ item }}"
        namespace: "{{ argocd_namespace }}"
      register: app_info
      until: "(app_info.resources | default([]) | length) == 0"
      retries: 30
      delay: 10
      loop:
        - workshop-gitops-vms-dev
        - workshop-gitops-vms-hml
        - workshop-gitops-vms-prd
      loop_control:
        label: "{{ item }}"
      failed_when: false

    - name: Wait for VirtualMachines to be deleted
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        namespace: "{{ workshop_namespace_base }}-{{ item }}"
      register: vm_info
      until: "(vm_info.resources | default([]) | length) == 0"
      retries: 30
      delay: 10
      loop:
        - dev
        - hml
        - prd
      loop_control:
        label: "{{ item }}"
      failed_when: false

    - name: Remove workshop namespaces
      kubernetes.core.k8s:
        state: absent
        api_version: v1
        kind: Namespace
        name: "{{ workshop_namespace_base }}-{{ item }}"
      loop:
        - dev
        - hml
        - prd
      failed_when: false

    - name: Wait for namespaces to be deleted
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Namespace
        name: "{{ workshop_namespace_base }}-{{ item }}"
      register: ns_info
      until: "(ns_info.resources | default([]) | length) == 0"
      retries: 30
      delay: 10
      loop:
        - dev
        - hml
        - prd
      loop_control:
        label: "{{ item }}"
      failed_when: false

    - name: Remove ArgoCD cluster role binding
      kubernetes.core.k8s:
        state: absent
        api_version: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        name: argocd-workshop-admin
      failed_when: false

    - name: Remove ArgoCD repository secret
      kubernetes.core.k8s:
        state: absent
        api_version: v1
        kind: Secret
        name: workshop-gitops-repo
        namespace: "{{ argocd_namespace }}"
      failed_when: false

    - name: Remove GitOps operator (if requested)
      kubernetes.core.k8s:
        state: absent
        api_version: operators.coreos.com/v1alpha1
        kind: Subscription
        name: openshift-gitops-operator
        namespace: openshift-operators
      when: remove_operator
      failed_when: false

    - name: Remove GitOps operator CSV (if requested)
      kubernetes.core.k8s_info:
        api_version: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        namespace: openshift-operators
        label_selectors:
          - "operators.coreos.com/openshift-gitops-operator.openshift-operators"
      register: gitops_csv
      when: remove_operator

    - name: Delete GitOps operator CSV
      kubernetes.core.k8s:
        state: absent
        api_version: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        name: "{{ item.metadata.name }}"
        namespace: openshift-operators
      loop: "{{ gitops_csv.resources | default([]) }}"
      when: remove_operator
      failed_when: false

    - name: Display removal completion
      ansible.builtin.debug:
        msg: |
          Workshop removal completed successfully!
          =======================================
          All workshop resources have been removed
          {{ 'GitOps operator was also removed' if remove_operator else 'GitOps operator was preserved (use -e remove_operator=true to remove it)' }}
