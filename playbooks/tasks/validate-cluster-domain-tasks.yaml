---
    - name: Check if Apps repository exists
      ansible.builtin.stat:
        path: "{{ apps_repo_path }}"
      register: apps_repo

    - name: Fail if Apps repository not found
      ansible.builtin.fail:
        msg: |
          Apps repository not found at {{ apps_repo_path }}
          Please clone the Apps repository: git clone {{ apps_repo_url }} {{ apps_repo_path }}
      when: not apps_repo.stat.exists

    - name: Get cluster domain from OpenShift
      kubernetes.core.k8s_info:
        api_version: config.openshift.io/v1
        kind: Ingress
        name: cluster
      register: cluster_ingress

    - name: Set cluster domain variable
      ansible.builtin.set_fact:
        cluster_domain: "{{ cluster_ingress.resources[0].spec.domain }}"

    - name: Display detected cluster domain
      ansible.builtin.debug:
        msg: "Detected cluster domain: {{ cluster_domain }}"

    - name: Read dev kustomization file
      ansible.builtin.slurp:
        path: "{{ apps_repo_path }}/overlays/dev/kustomization.yaml"
      delegate_to: localhost
      register: kustomization_dev_raw

    - name: Read hml kustomization file
      ansible.builtin.slurp:
        path: "{{ apps_repo_path }}/overlays/hml/kustomization.yaml"
      delegate_to: localhost
      register: kustomization_hml_raw

    - name: Read prd kustomization file
      ansible.builtin.slurp:
        path: "{{ apps_repo_path }}/overlays/prd/kustomization.yaml"
      delegate_to: localhost
      register: kustomization_prd_raw

    - name: Extract current domains using simple regex
      ansible.builtin.set_fact:
        current_dev_domain: >-
          {{ (kustomization_dev_raw.content | b64decode) | regex_search('value:\s+(dev-workshop-gitops-vms\.[^\s]+)', '\1') | first | default('') }}
        current_hml_domain: >-
          {{ (kustomization_hml_raw.content | b64decode) | regex_search('value:\s+(hml-workshop-gitops-vms\.[^\s]+)', '\1') | first | default('') }}
        current_prd_domain: >-
          {{ (kustomization_prd_raw.content | b64decode) | regex_search('value:\s+(workshop-gitops-vms\.[^\s]+)', '\1') | first | default('') }}

    - name: Set expected domain variables
      ansible.builtin.set_fact:
        expected_dev_domain: "dev-workshop-gitops-vms.{{ cluster_domain }}"
        expected_hml_domain: "hml-workshop-gitops-vms.{{ cluster_domain }}"
        expected_prd_domain: "workshop-gitops-vms.{{ cluster_domain }}"

    - name: Display current and expected domain configurations
      ansible.builtin.debug:
        msg:
          - "Current dev domain: {{ current_dev_domain }}"
          - "Expected dev domain: {{ expected_dev_domain }}"
          - "Current hml domain: {{ current_hml_domain }}"
          - "Expected hml domain: {{ expected_hml_domain }}"
          - "Current prd domain: {{ current_prd_domain }}"
          - "Expected prd domain: {{ expected_prd_domain }}"

    - name: Check if an update is needed
      ansible.builtin.set_fact:
        update_needed: >-
          {{
            (current_dev_domain != expected_dev_domain) or
            (current_hml_domain != expected_hml_domain) or
            (current_prd_domain != expected_prd_domain)
          }}

    - name: Update environment domains if necessary
      when: update_needed
      block:
        - name: Update git vms-dev repo branch
          ansible.builtin.git:
            repo: "{{ apps_repo_url }}"
            dest: "{{ apps_repo_path }}"
            version: vms-dev
            update: true

        - name: Update dev environment domain
          ansible.builtin.replace:
            path: "{{ apps_repo_path }}/overlays/dev/kustomization.yaml"
            regexp: '(\s+value:\s+)dev-workshop-gitops-vms\.[^\s]*'
            replace: '\1{{ expected_dev_domain }}'

        - name: Update hml environment domain
          ansible.builtin.replace:
            path: "{{ apps_repo_path }}/overlays/hml/kustomization.yaml"
            regexp: '(\s+value:\s+)hml-workshop-gitops-vms\.[^\s]*'
            replace: '\1{{ expected_hml_domain }}'

        - name: Update prd environment domain
          ansible.builtin.replace:
            path: "{{ apps_repo_path }}/overlays/prd/kustomization.yaml"
            regexp: '(\s+value:\s+)workshop-gitops-vms\.[^\s]*'
            replace: '\1{{ expected_prd_domain }}'

    - name: Commit and push domain configuration changes
      when: update_needed and auto_commit
      block:
        - name: Check for git changes
          ansible.builtin.shell:
            cmd: git status --porcelain
          args:
            chdir: "{{ apps_repo_path }}"
          register: git_changes
          changed_when: false

        - name: Commit domain configuration changes
          ansible.builtin.shell:
            cmd: |
              git add .
              git commit -m "feat: update cluster domain to {{ cluster_domain }}

              - Update development domain to: {{ expected_dev_domain }}
              - Update homologation domain to: {{ expected_hml_domain }}
              - Update production domain to: {{ expected_prd_domain }}"
          args:
            chdir: "{{ apps_repo_path }}"
          when: git_changes.stdout != ""
          register: git_commit
          changed_when: git_changes.stdout != ""

        - name: Push changes to vms-dev branch
          ansible.builtin.shell:
            cmd: git push origin vms-dev-{{ guid }}
          args:
            chdir: "{{ apps_repo_path }}"
          when: git_changes.stdout != ""
          register: git_push
          changed_when: false
          ignore_errors: true

    - name: Merge and push changes through environment branches
      when: update_needed and auto_commit and git_changes is defined and git_changes.stdout != ""
      block:
        - name: Switch to vms-hml branch and merge from dev
          ansible.builtin.git:
            repo: "{{ apps_repo_url }}"
            dest: "{{ apps_repo_path }}"
            version: vms-hml
            update: true

        - name: Merge vms-dev into vms-hml
          ansible.builtin.shell:
            cmd: git merge vms-dev-{{ guid }}
            chdir: "{{ apps_repo_path }}"

        - name: Push changes to vms-hml branch
          ansible.builtin.shell:
            cmd: git push origin vms-hml-{{ guid }}
            chdir: "{{ apps_repo_path }}"

        - name: Switch to main branch and merge from hml
          ansible.builtin.git:
            repo: "{{ apps_repo_url }}"
            dest: "{{ apps_repo_path }}"
            version: main
            update: true

        - name: Merge vms-hml into main
          ansible.builtin.shell:
            cmd: git merge vms-hml-{{ guid }}
            chdir: "{{ apps_repo_path }}"
            
        - name: Push changes to main branch
          ansible.builtin.shell:
            cmd: git push origin vms-prd-{{ guid }}
            chdir: "{{ apps_repo_path }}"

        - name: Switch back to vms-dev branch
          ansible.builtin.git:
            repo: "{{ apps_repo_url }}"
            dest: "{{ apps_repo_path }}"
            version: vms-dev

    - name: Display final configuration and status
      ansible.builtin.debug:
        msg:
          - "{{ 'Domain configuration updated successfully!' if update_needed else 'Domain configuration is already correct.' }}"
          - "Development: https://{{ expected_dev_domain }}"
          - "Homologation: https://{{ expected_hml_domain }}"
          - "Production: https://{{ expected_prd_domain }}"