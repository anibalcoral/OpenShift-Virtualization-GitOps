---
- name: Install and Configure OpenShift GitOps for Virtualization Workshop
  hosts: local
  gather_facts: false
  vars:
    workshop_namespace: "workshop-gitops-vms"
    git_repo_url: "git@github.com:anibalcoral/OpenShift-Virtualization-GitOps.git"

  tasks:
    - name: Check if user is logged into OpenShift
      kubernetes.core.k8s_info:
        api_version: v1
        kind: User
        name: "~"
      register: current_user

    - name: Display current OpenShift user
      debug:
        msg: "Connected to OpenShift as: {{ current_user.resources[0].metadata.name }}"

    - name: Install OpenShift GitOps Operator
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: openshift-gitops-operator
            namespace: openshift-operators
          spec:
            channel: latest
            name: openshift-gitops-operator
            source: redhat-operators
            sourceNamespace: openshift-marketplace

    - name: Check if GitOps Operator is installed
      kubernetes.core.k8s_info:
        api_version: operators.coreos.com/v1alpha1
        kind: Subscription
        name: openshift-gitops-operator
        namespace: openshift-operators
      register: gitops_subscription

    - name: Wait for ArgoCD instance to be created
      kubernetes.core.k8s_info:
        api_version: argoproj.io/v1alpha1
        kind: ArgoCD
        name: openshift-gitops
        namespace: openshift-gitops
      register: argocd_instance
      until: argocd_instance.resources | length > 0
      retries: 30
      delay: 10

    - name: Create workshop namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ workshop_namespace }}"
            labels:
              workshop: "gitops-ocpvirt"

    - name: Grant ArgoCD permissions to manage workshop resources
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: argocd-workshop-admin
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: cluster-admin
          subjects:
          - kind: ServiceAccount
            name: openshift-gitops-argocd-application-controller
            namespace: openshift-gitops

    - name: Add GitHub to known hosts for ArgoCD
      shell: ssh-keyscan github.com
      register: github_host_key

    - name: Create known hosts ConfigMap for ArgoCD
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: known-hosts-config
            namespace: openshift-gitops
          data:
            ssh_known_hosts: "{{ github_host_key.stdout }}"

    - name: Create ArgoCD Application for Development VMs
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: workshop-vms-dev
            namespace: openshift-gitops
          spec:
            project: default
            source:
              repoURL: "{{ git_repo_url }}"
              targetRevision: vms-dev
              path: overlays/dev
            destination:
              server: https://kubernetes.default.svc
              namespace: "{{ workshop_namespace }}-dev"
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              syncOptions:
                - CreateNamespace=true

    - name: Create ArgoCD Application for Homologation VMs
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: workshop-vms-hml
            namespace: openshift-gitops
          spec:
            project: default
            source:
              repoURL: "{{ git_repo_url }}"
              targetRevision: vms-hml
              path: overlays/hml
            destination:
              server: https://kubernetes.default.svc
              namespace: "{{ workshop_namespace }}-hml"
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              syncOptions:
                - CreateNamespace=true

    - name: Create ArgoCD Application for Production VMs
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: workshop-vms-prd
            namespace: openshift-gitops
          spec:
            project: default
            source:
              repoURL: "{{ git_repo_url }}"
              targetRevision: master
              path: overlays/prd
            destination:
              server: https://kubernetes.default.svc
              namespace: "{{ workshop_namespace }}-prd"
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              syncOptions:
                - CreateNamespace=true

    - name: Get ArgoCD server route
      kubernetes.core.k8s_info:
        api_version: route.openshift.io/v1
        kind: Route
        name: openshift-gitops-server
        namespace: openshift-gitops
      register: argocd_route

    - name: Get ArgoCD admin password
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: openshift-gitops-cluster
        namespace: openshift-gitops
      register: argocd_secret

    - name: Display ArgoCD access information
      ansible.builtin.debug:
        msg:
          - "ArgoCD URL: https://{{ argocd_route.resources[0].spec.host }}"
          - "Username: admin"
          - "Password: {{ argocd_secret.resources[0].data['admin.password'] | b64decode }}"
          - ""
          - "Workshop namespaces will be:"
          - "- {{ workshop_namespace }}-dev (Development)"
          - "- {{ workshop_namespace }}-hml (Homologation)"
          - "- {{ workshop_namespace }}-prd (Production)"