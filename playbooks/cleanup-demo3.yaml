---
- name: "Demo 3 Cleanup: Removing Development VM via Git Change"
  hosts: localhost
  gather_facts: true
  vars:
    namespace: "workshop-gitops-vms-dev"
    vm_name: "dev-vm-web-09"
    app_name: "workshop-gitops-vms-dev"
    apps_repo_path: "/opt/OpenShift-Virtualization-GitOps-Apps"

  tasks:
    - name: "Demo 3 Cleanup: Removing Development VM"
      ansible.builtin.debug:
        msg: |
          =============================================
          Demo Cleanup: Removing Demo 3 Development VM
          =============================================

    - name: Check if VM exists in cluster
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        name: "{{ vm_name }}"
        namespace: "{{ namespace }}"
      register: existing_vm

    - name: Display VM status
      ansible.builtin.debug:
        msg: "{{ 'VM found - will be removed via Git changes' if existing_vm.resources | length > 0 else 'VM not found in cluster' }}"

    - name: "Step 1: Removing vm-web-09.yaml from Git repository"
      ansible.builtin.debug:
        msg: "Removing vm-web-09.yaml from Git repository..."

    - name: Get current Git branch
      ansible.builtin.command:
        cmd: git branch --show-current
        chdir: "{{ apps_repo_path }}"
      register: current_branch
      changed_when: false

    - name: Switch to vms-dev branch if needed
      ansible.builtin.shell: git checkout vms-dev
      args:
        chdir: "{{ apps_repo_path }}"
      when: current_branch.stdout != "vms-dev"
      register: branch_switch

    - name: Show branch switch result
      ansible.builtin.debug:
        msg: "Switched to vms-dev branch"
      when: branch_switch is changed

    - name: Check if vm-web-09.yaml exists
      ansible.builtin.stat:
        path: "{{ apps_repo_path }}/base/vm-web-09.yaml"
      register: vm_file_check

    - name: Remove vm-web-09.yaml file
      ansible.builtin.file:
        path: "{{ apps_repo_path }}/base/vm-web-09.yaml"
        state: absent
      when: vm_file_check.stat.exists
      register: vm_file_removed

    - name: Confirm file removal
      ansible.builtin.debug:
        msg: "{{ 'Removed base/vm-web-09.yaml' if vm_file_removed is changed else '⚠️ base/vm-web-09.yaml not found' }}"

    - name: "Step 2: Updating kustomization.yaml to remove vm-web-09"
      ansible.builtin.debug:
        msg: "Updating kustomization.yaml to remove vm-web-09..."

    - name: Check if kustomization.yaml exists
      ansible.builtin.stat:
        path: "{{ apps_repo_path }}/base/kustomization.yaml"
      register: kustomization_file_check

    - name: Read kustomization.yaml content
      ansible.builtin.slurp:
        src: "{{ apps_repo_path }}/base/kustomization.yaml"
      register: kustomization_content
      when: kustomization_file_check.stat.exists

    - name: Check if vm-web-09.yaml is referenced in kustomization
      ansible.builtin.set_fact:
        vm_in_kustomization: "{{ 'vm-web-09.yaml' in (kustomization_content.content | b64decode) }}"
      when: kustomization_file_check.stat.exists

    - name: Create backup of kustomization.yaml
      ansible.builtin.copy:
        src: "{{ apps_repo_path }}/base/kustomization.yaml"
        dest: "{{ apps_repo_path }}/base/kustomization.yaml.bak"
        backup: true
      when: kustomization_file_check.stat.exists and vm_in_kustomization | default(false)

    - name: Remove vm-web-09.yaml entry from kustomization.yaml
      ansible.builtin.lineinfile:
        path: "{{ apps_repo_path }}/base/kustomization.yaml"
        regexp: '.*vm-web-09\.yaml.*'
        state: absent
        backup: true
      when: kustomization_file_check.stat.exists and vm_in_kustomization | default(false)
      register: kustomization_updated

    - name: Confirm kustomization update
      ansible.builtin.debug:
        msg: |
          {% if kustomization_updated is changed %}
          Removed 'vm-web-09.yaml' entry from base/kustomization.yaml (backup created)
          {% elif not kustomization_file_check.stat.exists %}
          ⚠️ base/kustomization.yaml not found
          {% else %}
          ⚠️ base/kustomization.yaml does not reference vm-web-09.yaml
          {% endif %}

    - name: "Step 3: Committing cleanup changes"
      ansible.builtin.debug:
        msg: "Committing cleanup changes..."

    - name: Check if there are changes to commit
      ansible.builtin.command:
        cmd: git diff --quiet
        chdir: "{{ apps_repo_path }}"
      register: git_diff_check
      failed_when: false
      changed_when: git_diff_check.rc != 0

    - name: Check if there are staged changes
      ansible.builtin.command:
        cmd: git diff --cached --quiet
        chdir: "{{ apps_repo_path }}"
      register: git_staged_check
      failed_when: false
      changed_when: git_staged_check.rc != 0

    - name: Add changes to Git
      ansible.builtin.command:
        cmd: git add -A
        chdir: "{{ apps_repo_path }}"
      when: git_diff_check.rc != 0 or git_staged_check.rc != 0
      register: git_add

    - name: Commit cleanup changes
      ansible.builtin.command:
        cmd: >
          git commit --quiet -m "cleanup: remove development VM web-09

          - Remove vm-web-09.yaml from base directory
          - Update kustomization to exclude vm-web-09
          - Restore development environment to original 2-VM configuration"
        chdir: "{{ apps_repo_path }}"
      when: git_diff_check.rc != 0 or git_staged_check.rc != 0
      register: git_commit

    - name: Push cleanup changes
      ansible.builtin.command:
        cmd: git push origin vms-dev
        chdir: "{{ apps_repo_path }}"
      when: git_commit is changed
      register: git_push

    - name: Ensure the staging branch (hml) is up to date
      ansible.builtin.shell:
        cmd: |
          git checkout vms-hml
          git pull origin vms-hml
        chdir: "{{ apps_repo_path }}"
      when: git_commit is changed
      changed_when: false

    - name: Merge DEV into HML
      ansible.builtin.shell:
        cmd: git merge vms-dev
        chdir: "{{ apps_repo_path }}"
      when: git_commit is changed
      register: merge_hml

    - name: Push changes to HML branch
      ansible.builtin.command:
        cmd: git push origin vms-hml
        chdir: "{{ apps_repo_path }}"
      when: git_commit is changed and merge_hml.rc == 0
      changed_when: true

    - name: Ensure the main branch is up to date
      ansible.builtin.shell:
        cmd: |
          git checkout main
          git pull origin main
        chdir: "{{ apps_repo_path }}"
      when: git_commit is changed
      changed_when: false

    - name: Merge HML into MAIN
      ansible.builtin.shell:
        cmd: git merge vms-hml
        chdir: "{{ apps_repo_path }}"
      when: git_commit is changed
      register: merge_main

    - name: Push changes to MAIN branch
      ansible.builtin.command:
        cmd: git push origin main
        chdir: "{{ apps_repo_path }}"
      when: git_commit is changed and merge_main.rc == 0
      changed_when: true

    - name: Ensure the staging branch (dev) is up to date
      ansible.builtin.shell:
        cmd: |
          git checkout vms-dev
          git pull origin vms-dev
        chdir: "{{ apps_repo_path }}"
      when: git_commit is changed
      changed_when: false

    - name: Confirm Git operations
      ansible.builtin.debug:
        msg: |
          {% if git_commit is changed and git_push is changed %}
          Cleanup changes committed and pushed
          {% else %}
          No changes to commit - cleanup may have already been done
          {% endif %}

    - name: "Step 4: Wait for ArgoCD to detect and apply cleanup"
      ansible.builtin.debug:
        msg: "Triggering ArgoCD sync to apply cleanup (with prune)..."

    - name: Trigger ArgoCD sync with prune
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: "{{ app_name }}"
            namespace: openshift-gitops
          spec:
            syncPolicy:
              syncOptions:
                - PrunePropagationPolicy=foreground
                - Prune=true
          merge_type:
            - strategic-merge
            - merge

    - name: Trigger ArgoCD refresh and sync
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: "{{ app_name }}"
            namespace: openshift-gitops
            annotations:
              argocd.argoproj.io/refresh: "{{ ansible_date_time.iso8601 }}"

    - name: Wait for VM to be deleted (if it existed)
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        name: "{{ vm_name }}"
        namespace: "{{ namespace }}"
      register: vm_deletion_check
      until: vm_deletion_check.resources | length == 0
      retries: 60
      delay: 2
      when: existing_vm.resources | length > 0

    - name: Wait for application to return to Synced state
      kubernetes.core.k8s_info:
        api_version: argoproj.io/v1alpha1
        kind: Application
        name: "{{ app_name }}"
        namespace: openshift-gitops
      register: final_sync_check
      until: >
        final_sync_check.resources | length > 0 and
        (
          final_sync_check.resources[0].status is defined and
          final_sync_check.resources[0].status.sync is defined and
          final_sync_check.resources[0].status.sync.status == "Synced"
        )
      retries: 30
      delay: 2

    - name: Get remaining VMs in development environment
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        namespace: "{{ namespace }}"
        label_selectors:
          - "app=web-server"
      register: remaining_vms

    - name: Demo 3 cleanup completion summary
      ansible.builtin.debug:
        msg: |

          Demo 3 cleanup completed successfully!

          Summary:
          =========
          ✓ Removed vm-web-09.yaml from Git repository
          ✓ Updated kustomization.yaml to exclude vm-web-09
          ✓ Committed and pushed cleanup changes
          ✓ ArgoCD detected and applied cleanup
          ✓ VM dev-vm-web-09 removed from cluster
          ✓ Development environment restored to 2-VM baseline

          Remaining VMs: {{ remaining_vms.resources | map(attribute='metadata.name') | list | join(', ') }}
